# Example Spring Boot Configuration for User Service

server:
  port: 8081
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: user-service
  profiles:
    active: local
  jpa:
    hibernate:
      ddl-auto: update  # Example: update, validate, none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
    open-in-view: false
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

app:
  jwt:
    secret: <your-jwt-secret>
    expiration-hours: 24
    issuer: <your-issuer>
  cache:
    default-ttl: 3600
    user-profile-ttl: 1800
    active-users-ttl: 600

logging:
  level:
    io.github.zeviabramovich: INFO
    org.springframework.security: WARN
    org.springframework.cache: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

---
# LOCAL PROFILE EXAMPLE
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/user_db
    username: <your-db-username>
    password: <your-db-password>
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10
      minimum-idle: 5
  data:
    redis:
      host: localhost
      port: 6379
      password: <your-redis-password>
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: user-service-local
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "io.github.zeviabramovich.ecommerce"
logging:
  level:
    io.github.zeviabramovich: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG 